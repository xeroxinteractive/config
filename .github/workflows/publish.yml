on:
  push:
    branches:
      - release
      - next

name: Publish

jobs:
  test:
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ matrix.node-version}}-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn lint
      - run: yarn test

  release:
    needs: test
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Prepare repository
        run: git fetch --unshallow --tags
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            node_modules
            */*/node_modules
          key: 12.x-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: Deploy
        run: |
          yarn deploy
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          SLACK_WEBHOOK_URL: ${{secrets.NPM_SLACK_WEBHOOK}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
